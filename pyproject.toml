[project]
name = "odoo-tools"
authors = [
    {name = "Camptocamp SA", email="info@camptocamp.com"},
]
description = "Our Odoo project tools"
readme = "README.md"
keywords = ["odoo", "project"]
license = {file = "LICENSE"}
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Framework :: Odoo",
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
dependencies = [
    "invoke==2.2.0",
    "requests==2.32.4",
    # "git-aggregator>=4.0",
    # TMP dep to use https://github.com/acsone/git-aggregator/pull/91
    "git-aggregator @ git+https://github.com/acsone/git-aggregator.git#egg=git-aggregator",
    "git-autoshare",
    "passlib",
    "clipboard",
    "marabunta",
    "pre-commit",
    "psycopg2-binary>=2.7.6",
    "gitpython",
    "packaging",
    "setuptools",
    "pydantic>=2.0.0",
    "pyyaml>6.0.0",
    "ruamel.yaml",
    "kaptan==0.6.0",
    "wheel",
    "cookiecutter",
    "click>=8.1",
    "towncrier",
    "bump2version",
    "requirements-parser>=0.8.0",
    "Jinja2",
    ]
requires-python = ">=3.9"
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/camptocamp/odoo-project-tools"
documentation = "https://github.com/camptocamp/odoo-project-tools"
repository = "https://github.com/camptocamp/odoo-project-tools"

[project.scripts]
otools-tasks = "odoo_tools.tasks.main:program.run"
otools-project = "odoo_tools.cli.project:cli"
otools-addon = "odoo_tools.cli.addon:cli"
otools-submodule = "odoo_tools.cli.submodule:cli"
otools-release = "odoo_tools.cli.release:cli"
otools-pending = "odoo_tools.cli.pending:cli"
otools-conversion = "odoo_tools.conversion.convert_new_img:main"
otools-ba = "odoo_tools.cli.batools:cli"
otools-pr = "odoo_tools.cli.pr:cli"
otools-migrate-db = "odoo_tools.cli.migrate_db:cli"


[project.optional-dependencies]
test = [
  "coverage",
  "pytest",
  "responses",
]
convert = []

[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
find = {}

[tool.setuptools_scm]

[tool.pytest.ini_options]
markers = [
    "project_setup",
]

[tool.black]
line-length = 88
skip-string-normalization = "True"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
  "F",        # pyflakes
  "E",        # pycodestyle (errors)
  "W",        # pycodestyle (warnings)
  "C90",      # mccabe
  "I",        # isort
  "UP",       # pyupgrade
  "B",        # flake8-bugbear
  "Q",        # flake8-quotes
]
ignore = [
  "E501",     # line too long (if black is happy, we're happy)
]

[tool.ruff.lint.mccabe]
max-complexity = 16

[tool.towncrier]
directory = "changes.d"
filename = "HISTORY.rst"
template = ".towncrier-template.rst"
title_format = ""
issue_format = "{issue}"

[[tool.towncrier.type]]
directory = "feat"
name = "Features and Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "fix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "rem"
name = "Remove"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "build"
name = "Build"
showcontent = true
